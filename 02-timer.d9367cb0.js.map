{"mappings":"AAIA,SAASA,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,CAItC,MAAMC,EAAiBC,SAASC,eAAe,mBACzCC,EAAcF,SAASG,cAAc,eACrCC,EAAeJ,SAASG,cAAc,gBACtCE,EAAiBL,SAASG,cAAc,kBACxCG,EAAiBN,SAASG,cAAc,kBAG9C,IAAII,EAAsB,KACtBC,EAAmB,KAmBvB,SAASC,IACPC,cAAcH,GACdC,EAAmB,KACnBN,EAAYS,YAAc,KAC1BP,EAAaO,YAAc,KAC3BN,EAAeM,YAAc,KAC7BL,EAAeK,YAAc,KAC7BZ,EAAea,UAAW,EAC1BC,EAAYC,MAAMC,QAAU,M,CAG9B,MAAMF,EAAcb,SAASgB,cAAc,UAwB3C,SAASC,IACP,MAAMC,EAAc,IAAIC,KAClBC,GAzEqBC,EAyEMb,EAzECc,EAyEiBJ,EAxE5CK,KAAKC,IAAIH,EAAQC,IAD1B,IAA6BD,EAAOC,EA2ElC,GAAIF,GAAQ,EAGV,OA/CFV,cAAcH,GACdR,EAAea,UAAW,EAC1BC,EAAYC,MAAMC,QAAU,aA4C1BN,IAIF,MAAMgB,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAQhC,SAAmBC,GACjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENP,EAAOF,KAAKW,MAAML,EAAKI,GACvBP,EAAQH,KAAKW,MAAML,EAAMI,EAAOD,GAChCL,EAAUJ,KAAKW,MAAML,EAAOI,EAAOD,EAAQD,GAC3CH,EAAUL,KAAKW,MAAML,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEL,E,MAAMC,E,QAAOC,E,QAASC,E,CAnBWO,CAAUf,GAEpDlB,EAAYS,YAAchB,EAAe8B,GACzCrB,EAAaO,YAAchB,EAAe+B,GAC1CrB,EAAeM,YAAchB,EAAegC,GAC5CrB,EAAeK,YAAchB,EAAeiC,E,CAtC9Cf,EAAYF,YAAc,QAC1BE,EAAYC,MAAMC,QAAU,OAC5BF,EAAYuB,iBAAiB,QAAS3B,GAEtCT,SAASqC,KAAKC,YAAYzB,GAE1B0B,UAAUxC,EAAgB,CACxByC,YAAY,EACZC,WAAY,YACZC,QAAS,QACTC,SAAU,SAAUC,EAAeC,GACZ,IAAI1B,KAAK0B,IACV,IAAI1B,KAGtB2B,OAAOC,MAAM,uCA3CjBvC,EAAmB,IAAIW,KA6CC0B,GAzCxBtC,EAAsByC,YAAY/B,EAAiB,KACnDA,IACAlB,EAAea,UAAW,EAC1BC,EAAYC,MAAMC,QAAU,O,IA6E9BF,EAAYC,MAAMC,QAAU","sources":["src/js/02-timer.js"],"sourcesContent":["function getMillisecondsDiff(date1, date2) {\n  return Math.abs(date1 - date2);\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\n// Elements in the interface\nconst datetimePicker = document.getElementById('datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\n// Initial values\nlet countdownIntervalId = null;\nlet countdownEndDate = null;\n\nfunction setCountdownEndDate(dateString) {\n  countdownEndDate = new Date(dateString);\n}\n\nfunction startCountdown() {\n  countdownIntervalId = setInterval(updateCountdown, 1000);\n  updateCountdown();\n  datetimePicker.disabled = true;\n  resetButton.style.display = 'none';\n}\n\nfunction stopCountdown() {\n  clearInterval(countdownIntervalId);\n  datetimePicker.disabled = false;\n  resetButton.style.display = 'block';\n}\n\nfunction resetCountdown() {\n  clearInterval(countdownIntervalId);\n  countdownEndDate = null;\n  daysElement.textContent = '00';\n  hoursElement.textContent = '00';\n  minutesElement.textContent = '00';\n  secondsElement.textContent = '00';\n  datetimePicker.disabled = false;\n  resetButton.style.display = 'none';\n}\n\nconst resetButton = document.createElement('button');\nresetButton.textContent = 'Reset';\nresetButton.style.display = 'none';\nresetButton.addEventListener('click', resetCountdown);\n\ndocument.body.appendChild(resetButton);\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  dateFormat: 'Y-m-d H:i',\n  minDate: 'today',\n  onChange: function (selectedDates, dateStr) {\n    const selectedDate = new Date(dateStr);\n    const currentDate = new Date();\n\n    if (selectedDate <= currentDate) {\n      window.alert('Please choose a date in the future');\n    } else {\n      setCountdownEndDate(dateStr);\n      startCountdown();\n    }\n  },\n});\n\nfunction updateCountdown() {\n  const currentDate = new Date();\n  const diff = getMillisecondsDiff(countdownEndDate, currentDate);\n\n  if (diff <= 0) {\n    stopCountdown();\n    resetCountdown(); // Optionally reset the countdown after reaching 00:00:00:00\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(diff);\n\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Показать кнопку Reset\nresetButton.style.display = 'block';\n"],"names":["$40d383fb392a7037$var$addLeadingZero","value","toString","padStart","$40d383fb392a7037$var$datetimePicker","document","getElementById","$40d383fb392a7037$var$daysElement","querySelector","$40d383fb392a7037$var$hoursElement","$40d383fb392a7037$var$minutesElement","$40d383fb392a7037$var$secondsElement","$40d383fb392a7037$var$countdownIntervalId","$40d383fb392a7037$var$countdownEndDate","$40d383fb392a7037$var$resetCountdown","clearInterval","textContent","disabled","$40d383fb392a7037$var$resetButton","style","display","createElement","$40d383fb392a7037$var$updateCountdown","currentDate","Date","diff","date1","date2","Math","abs","days","hours","minutes","seconds","ms","second","minute","hour","day","floor","$40d383fb392a7037$var$convertMs","addEventListener","body","appendChild","flatpickr","enableTime","dateFormat","minDate","onChange","selectedDates","dateStr","window","alert","setInterval"],"version":3,"file":"02-timer.d9367cb0.js.map"}